<?php

/**
 * BaseFunder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $Productions
 * @property Doctrine_Collection $Donations
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getProductions() Returns the current record's "Productions" collection
 * @method Doctrine_Collection getDonations()   Returns the current record's "Donations" collection
 * @method Funder              setName()        Sets the current record's "name" value
 * @method Funder              setDescription() Sets the current record's "description" value
 * @method Funder              setProductions() Sets the current record's "Productions" collection
 * @method Funder              setDonations()   Sets the current record's "Donations" collection
 * 
 * @package    bristol-old-vic-archive
 * @subpackage model
 * @author     Steve Lacey
 * @version    SVN: $Id$
 */
abstract class BaseFunder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('funder');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('orderBy', 'name asc');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Production as Productions', array(
             'refClass' => 'Donation',
             'local' => 'funder_id',
             'foreign' => 'production_id'));

        $this->hasMany('Donation as Donations', array(
             'local' => 'id',
             'foreign' => 'funder_id',
             'onDelete' => 'cascade',
             'cascade' => array(
             0 => 'delete',
             )));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}