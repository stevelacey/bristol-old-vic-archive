<?php

/**
 * BaseSponsor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $Productions
 * @property Doctrine_Collection $Donations
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getProductions() Returns the current record's "Productions" collection
 * @method Doctrine_Collection getDonations()   Returns the current record's "Donations" collection
 * @method Sponsor             setName()        Sets the current record's "name" value
 * @method Sponsor             setDescription() Sets the current record's "description" value
 * @method Sponsor             setProductions() Sets the current record's "Productions" collection
 * @method Sponsor             setDonations()   Sets the current record's "Donations" collection
 * 
 * @package    bristol-old-vic-archive
 * @subpackage model
 * @author     Steve Lacey
 * @version    SVN: $Id$
 */
abstract class BaseSponsor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sponsor');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('orderBy', 'name asc');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Production as Productions', array(
             'refClass' => 'Donation',
             'local' => 'sponsor_id',
             'foreign' => 'production_id'));

        $this->hasMany('Donation as Donations', array(
             'local' => 'id',
             'foreign' => 'sponsor_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}